version: '3.8'

services:
  nlp:
    build:
      context: .
      dockerfile: docker/Dockerfile.nlp
    ports:
      - "8001:8001"
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
    volumes:
      - ./services/core/eads_core:/app/eads_core
      - ./services/nlp/eads_nlp:/app/eads_nlp
    depends_on:
      - postgres
      - neo4j

  gp:
    build:
      context: .
      dockerfile: docker/Dockerfile.gp
    ports:
      - "8002:8002"
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
      - CUDA_VISIBLE_DEVICES=0
    volumes:
      - ./services/core/eads_core:/app/eads_core
      - ./services/gp/eads_gp:/app/eads_gp
    depends_on:
      - postgres

  postgres:
    build:
      context: .
      dockerfile: docker/Dockerfile.postgres
    environment:
      - POSTGRES_USER=eads
      - POSTGRES_PASSWORD=eadspass
      - POSTGRES_DB=eads
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  neo4j:
    build:
      context: .
      dockerfile: docker/Dockerfile.neo4j
    environment:
      - NEO4J_AUTH=neo4j/eadspass
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data

  dagster-daemon:
    build:
      context: .
      dockerfile: docker/Dockerfile.dagster
    environment:
      - DAGSTER_HOME=/opt/dagster/dagster_home
      - PYTHONPATH=/app
    volumes:
      - ./orchestration:/opt/dagster/dagster_home
      - ./services:/app/services
    command: ["dagster-daemon", "run"]
    depends_on:
      - postgres
      - neo4j

  dagster-webserver:
    build:
      context: .
      dockerfile: docker/Dockerfile.dagster
    ports:
      - "3000:3000"
    environment:
      - DAGSTER_HOME=/opt/dagster/dagster_home
      - PYTHONPATH=/app
    volumes:
      - ./orchestration:/opt/dagster/dagster_home
      - ./services:/app/services
    command: ["dagster-webserver", "-h", "0.0.0.0", "-p", "3000", "-w", "/opt/dagster/dagster_home/workspace.yaml", "--path-prefix=/dagster"]
    depends_on:
      - dagster-daemon
      - postgres
      - neo4j

volumes:
  postgres_data:
  neo4j_data:
